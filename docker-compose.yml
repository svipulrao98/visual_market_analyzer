version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: trading_timescaledb
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./app/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: trading_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build: .
    container_name: trading_fastapi
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      BROKER: ${BROKER}
      KITE_API_KEY: ${KITE_API_KEY}
      KITE_API_SECRET: ${KITE_API_SECRET}
      KITE_USERNAME: ${KITE_USERNAME}
      KITE_PASSWORD: ${KITE_PASSWORD}
      KITE_TOTP_KEY: ${KITE_TOTP_KEY}
      KITE_ACCESS_TOKEN: ${KITE_ACCESS_TOKEN}
      FYERS_APP_ID: ${FYERS_APP_ID}
      FYERS_ACCESS_TOKEN: ${FYERS_ACCESS_TOKEN}
      LOG_LEVEL: ${LOG_LEVEL}
      TICK_BUFFER_SIZE: ${TICK_BUFFER_SIZE}
      FLUSH_INTERVAL_SECONDS: ${FLUSH_INTERVAL_SECONDS}
    depends_on:
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./scripts:/app/scripts
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: trading_grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_INSTALL_PLUGINS: "yesoreyeram-infinity-datasource,volkovlabs-variable-panel"
      GF_DASHBOARDS_MIN_REFRESH_INTERVAL: "1s"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - timescaledb
    restart: unless-stopped

volumes:
  timescaledb_data:
  redis_data:
  grafana_data:

